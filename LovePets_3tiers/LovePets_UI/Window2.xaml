<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LovePets_UI"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf" x:Class="LovePets_UI.Window2"
        mc:Ignorable="d"
        Title="Window2"  Height="{x:Static SystemParameters.PrimaryScreenHeight}" 
      Width="{x:Static SystemParameters.PrimaryScreenWidth}"  WindowStartupLocation="CenterScreen" 
    Closing="Window_Closing">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="40" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Margin="0,0,-38.2,-26.8" Width="Auto" Height="Auto">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RoundedButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="40" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Margin="0,0,4.4,0.2">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="29*"/>
            <ColumnDefinition Width="22*"/>
        </Grid.ColumnDefinitions>

        <Button Content="&lt;" Padding="10,1,10,20" HorizontalAlignment="Left" Height="31" Margin="36,38,0,0" VerticalAlignment="Top" Width="25" RenderTransformOrigin="1.313,2.926" Click="Button_Click"  FontSize="36" Background="#FFFF614A" HorizontalContentAlignment="Center" VerticalContentAlignment="Top" Style="{DynamicResource RoundedButtonStyle}"/>
        <StackPanel Margin="573,266,9.6,178.4" Visibility="Visible" Grid.ColumnSpan="2">
            <TextBlock x:Name="question" Text="Label"  TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Top" Height="132" Width="907" FontSize="36" Visibility="Visible"/>
            <RadioButton x:Name="answer1" Content="RadioButton"  HorizontalAlignment="Left" Height="45"  Width="937" FontSize="20"/>
            <RadioButton x:Name="answer2" Content="RadioButton" HorizontalAlignment="Left" Height="45" Width="947" FontSize="20"/>
            <RadioButton x:Name="answer3" Content="RadioButton" HorizontalAlignment="Left" Height="45"  Width="937" FontSize="20"/>
            <RadioButton x:Name="answer4" Content="RadioButton" HorizontalAlignment="Left" Height="45" Width="947" FontSize="20"/>
            <RadioButton x:Name="answer5" Content="RadioButton" HorizontalAlignment="Left" Height="45"   Width="947" FontSize="20"/>
        </StackPanel>
        <Button x:Name="next_button" Content="Перейти далі" HorizontalAlignment="Left" Height="55" Margin="644,737,0,0" VerticalAlignment="Top" Width="222" FontSize="20" Click="Button_Click_1" RenderTransformOrigin="0.433,0.044" Visibility="Visible" Background="PaleVioletRed" Style="{DynamicResource RoundedButtonStyle1}"/>
        <Image x:Name="image1" HorizontalAlignment="Left" Stretch="UniformToFill" Height="364" Margin="15,135,0,0" VerticalAlignment="Top" Width="530" Visibility="Hidden" Grid.Column="1"/>
        <Image x:Name="image2" HorizontalAlignment="Left" Stretch="UniformToFill" Height="364" Margin="167,373,0,0" VerticalAlignment="Top" Width="530" Visibility="Hidden"/>

        <TextBlock x:Name="textblock1" HorizontalAlignment="Left" Height="85" Margin="299,50,0,0" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Top" Width="902"  Visibility="Hidden" FontSize="36" Grid.ColumnSpan="2"/>
        <TextBlock x:Name="textblock2" HorizontalAlignment="Left" Height="269" Margin="130,140,0,0" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Top" Width="640" Visibility="Hidden" FontSize="20"/>
        <TextBlock x:Name="textblock3" HorizontalAlignment="Left" Height="269" Margin="775,523,0,0" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Top" Width="640" Visibility="Hidden" FontSize="20" Grid.ColumnSpan="2"/>
        <Image x:Name="image3"  HorizontalAlignment="Left" Stretch="UniformToFill"  Height="275" Margin="34,280,0,0" VerticalAlignment="Top" Width="493" Visibility="Visible"/>
        <Image x:Name="logo" Source="C:\love-pets\love-pets\LovePets_3tiers\LovePets_UI\Photos\logo.png" Grid.ColumnSpan="2" HorizontalAlignment="Left" Height="41" Margin="658,10,0,0" VerticalAlignment="Top" Width="292"/>

    </Grid>
</Window>
